plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}

group 'org.example'

repositories {
    mavenCentral()
}

mainClassName = "main"

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }
    test {
        java {
            srcDirs = ['src/test/kotlin']
        }
    }
    integTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
            srcDirs = ['intTests']
        }
    }
}

configurations {
    integTestImplementation.extendsFrom implementation
    integTestRuntimeOnly.extendsFrom runtimeOnly
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    integTestImplementation "org.jetbrains.kotlin:kotlin-test:1.4.10"
}

test {
    useJUnitPlatform()
}

task integTest(type: Test){
    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
    useJUnitPlatform()
}

run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}
